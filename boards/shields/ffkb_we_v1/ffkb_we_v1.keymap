/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>

/ {
    behaviors {
        mtr: mod-tap-repeat {
            compatible = "zmk,behavior-hold-tap";
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        mtb: mod-tap-balanced {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            tapping-term-ms = <400>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        ltr: layer-tap-repeat {
            compatible = "zmk,behavior-hold-tap";
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        z {
            bindings = <&kp Z>;
            key-positions = <28 27>;
            layers = <0>;
        };

        q {
            bindings = <&kp Q>;
            key-positions = <31 32>;
            layers = <0>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <16 15>;
            layers = <2>;
        };

        backslash {
            bindings = <&kp BSLH>;
            key-positions = <2 3>;
            layers = <2>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <27 28>;
            layers = <2>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <14 15>;
            layers = <2>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <4 3>;
            layers = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        ngram {
            bindings = <
&trans  &kp B  &kp Y  &kp O             &kp U                 &none            &none                        &kp L         &kp D               &kp W  &kp V  &trans
&none   &kp C  &kp I  &kp E             &kp A                 &none            &none                        &kp H         &kp T               &kp S  &kp N  &none
&trans  &kp G  &kp X  &kp J             &kp K                 &trans           &trans                       &kp R         &kp M               &kp F  &kp P  &trans
                      &mt LEFT_WIN TAB  &mt LEFT_SHIFT SPACE  &ltr 1 DELETE    &mtr LEFT_CONTROL BACKSPACE  &lt 2 ESCAPE  &mt LEFT_ALT ENTER
            >;
        };

        nav {
            bindings = <
&trans  &kp DELETE          &kp HOME            &kp UP                &kp END                   &trans    &trans               &kp N1              &kp N2                &kp N3            &kp BACKSPACE         &trans
&trans  &kp TAB             &kp LEFT            &kp DOWN              &kp RIGHT                 &trans    &trans               &kp N4              &kp N5                &kp N6            &kp ENTER             &trans
&trans  &mt LEFT_GUI SPACE  &mt LEFT_ALT PG_UP  &mt LEFT_CONTROL INS  &mt LEFT_SHIFT PAGE_DOWN  &trans    &trans               &mt RIGHT_SHIFT N7  &mt RIGHT_CONTROL N8  &mt RIGHT_ALT N9  &mt RIGHT_GUI ESCAPE  &trans
                                                &trans                &trans                    &trans    &lt 3 LC(BACKSPACE)  &lt 2 N0            &kp LC(ENTER)
            >;
        };

        sym {
            bindings = <
&none  &kp PIPE   &kp AMPERSAND      &kp LEFT_BRACE  &kp RIGHT_BRACE  &none     &none   &kp LBKT   &kp RBKT  &kp GRAVE  &kp EXCL   &none
&none  &kp EQUAL  &kp DOUBLE_QUOTES  &kp COLON       &kp SEMI         &none     &none   &kp COMMA  &kp DOT   &kp SQT    &kp QMARK  &none
&none  &kp MINUS  &kp PLUS           &kp LT          &kp GT           &none     &none   &kp LPAR   &kp RPAR  &kp ASTRK  &kp SLASH  &none
                                     &kp HASH        &kp UNDER        &kp AT    &trans  &trans     &trans
            >;
        };

        sys {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans      &trans     &kp F1  &kp F2  &kp F3  &kp F10  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans     &kp F4  &kp F5  &kp F6  &kp F11  &trans
&trans  &trans  &trans  &trans  &trans  &bootloader &bt BT_CLR &kp F7  &kp F8  &kp F9  &kp F12  &trans
                        &trans  &trans  &trans      &trans     &trans  &trans
            >;
        };
    };
};
